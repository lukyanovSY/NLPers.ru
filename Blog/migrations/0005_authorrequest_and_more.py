# Generated by Django 5.1.2 on 2025-08-03 06:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Blog', '0004_auto_20250803_0053'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivation', models.TextField(help_text='Расскажите, почему хотите стать автором', max_length=1000, verbose_name='Мотивация')),
                ('experience', models.TextField(blank=True, help_text='Опишите свой опыт в области, о которой планируете писать', max_length=1000, verbose_name='Опыт')),
                ('sample_topics', models.TextField(blank=True, help_text='Какие темы планируете освещать?', max_length=1000, verbose_name='Примеры тем')),
                ('status', models.CharField(choices=[('pending', 'Ожидает рассмотрения'), ('approved', 'Одобрена'), ('rejected', 'Отклонена')], default='pending', max_length=20, verbose_name='Статус')),
                ('admin_comment', models.TextField(blank=True, verbose_name='Комментарий администратора')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата подачи заявки')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата рассмотрения')),
            ],
            options={
                'verbose_name': 'Заявка на авторство',
                'verbose_name_plural': 'Заявки на авторство',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RenameIndex(
            model_name='follow',
            new_name='Blog_follow_follow__2b3022_idx',
            old_name='Blog_follow_follow__5b7ed4_idx',
        ),
        migrations.RenameIndex(
            model_name='follow',
            new_name='Blog_follow_followe_d3fe1f_idx',
            old_name='Blog_follow_followe_af7f4a_idx',
        ),
        migrations.AlterField(
            model_name='category',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='follow',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='like',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='post',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AddField(
            model_name='authorrequest',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL, verbose_name='Рассмотрена'),
        ),
        migrations.AddField(
            model_name='authorrequest',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='author_request', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
