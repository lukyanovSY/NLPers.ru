from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from Blog.models import Category, Post
from django.utils import timezone


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–ª–æ–≥–∞'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...'))
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories_data = [
            {'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'slug': 'programming'},
            {'name': 'Python', 'slug': 'python'},
            {'name': 'Django', 'slug': 'django'},
        ]
        
        categories = []
        for cat_data in categories_data:
            category, created = Category.objects.get_or_create(
                slug=cat_data['slug'],
                defaults={'name': cat_data['name'], 'description': f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {cat_data["name"]}'}
            )
            categories.append(category)
            if created:
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user, created = User.objects.get_or_create(
            username='testuser',
            defaults={
                'email': 'test@example.com',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'is_active': True
            }
        )
        if created:
            user.set_password('demo123')
            user.save()
            self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
        posts_data = [
            {
                'title': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–ª–æ–≥ NLPers.ru!',
                'content': '<h2>–ü—Ä–∏–≤–µ—Ç!</h2><p>–≠—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –≤ –Ω–∞—à–µ–º –±–ª–æ–≥–µ. –ó–¥–µ—Å—å –º—ã –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, Python –∏ Django.</p>',
                'excerpt': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–ª–æ–≥ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö.',
                'category_index': 0
            },
            {
                'title': '–û—Å–Ω–æ–≤—ã Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
                'content': '<h2>Python - –æ—Ç–ª–∏—á–Ω—ã–π —è–∑—ã–∫!</h2><p>Python –ø—Ä–æ—Å—Ç–æ–π –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∏ –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.</p><pre><code>print("Hello, World!")</code></pre>',
                'excerpt': '–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤—ã Python - –ø—Ä–æ—Å—Ç–æ–≥–æ –∏ –º–æ—â–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.',
                'category_index': 1
            },
            {
                'title': '–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Django',
                'content': '<h2>Django Framework</h2><p>Django –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Python.</p>',
                'excerpt': '–£—á–∏–º—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é Django —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞.',
                'category_index': 2
            }
        ]
        
        for i, post_data in enumerate(posts_data):
            category = categories[post_data['category_index']]
            
            post, created = Post.objects.get_or_create(
                title=post_data['title'],
                defaults={
                    'content': post_data['content'],
                    'excerpt': post_data['excerpt'],
                    'author': user,
                    'category': category,
                    'slug': post_data['title'].lower().replace(' ', '-').replace('!', '').replace(',', ''),
                    'status': 'published',
                    'published_at': timezone.now(),
                    'views_count': 10 + i * 5,
                    'likes_count': i + 1,
                    'reading_time': 3 + i,
                    'is_featured': i == 0,  # –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π
                    'allow_comments': True
                }
            )
            if created:
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç: {post.title}')
        
        self.stdout.write(
            self.style.SUCCESS('üéâ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!')
        )
        self.stdout.write(
            self.style.SUCCESS(f'üìÅ –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}')
        )
        self.stdout.write(
            self.style.SUCCESS(f'üìù –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {Post.objects.count()}')
        )
        self.stdout.write(
            self.style.WARNING('üîë –î–ª—è –≤—Ö–æ–¥–∞: testuser / demo123')
        )