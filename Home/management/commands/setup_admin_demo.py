from django.core.management.base import BaseCommand
from django.contrib.auth.models import User, Group
from django.core.management import call_command


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--skip-groups',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø',
        )
        parser.add_argument(
            '--skip-data',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...'))

        # –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—ã –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if not options['skip_groups']:
            self.stdout.write(self.style.SUCCESS('üìù –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...'))
            call_command('setup_admin_groups')

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if not options['skip_data']:
            self.stdout.write(self.style.SUCCESS('üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...'))
            call_command('create_simple_data')

        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
        self.stdout.write(self.style.SUCCESS('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∞–π—Ç–∞...'))
        call_command('create_site_settings')

        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
        demo_users = [
            {
                'username': 'editor',
                'email': 'editor@nlpers.ru',
                'password': 'demo123',
                'groups': ['–†–µ–¥–∞–∫—Ç–æ—Ä—ã'],
                'is_staff': True,
                'first_name': '–ò–≤–∞–Ω',
                'last_name': '–†–µ–¥–∞–∫—Ç–æ—Ä'
            },
            {
                'username': 'moderator',
                'email': 'moderator@nlpers.ru',
                'password': 'demo123',
                'groups': ['–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã'],
                'is_staff': True,
                'first_name': '–ú–∞—Ä–∏—è',
                'last_name': '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
            },
            {
                'username': 'author',
                'email': 'author@nlpers.ru',
                'password': 'demo123',
                'groups': ['–ê–≤—Ç–æ—Ä—ã'],
                'is_staff': True,
                'first_name': '–ü–µ—Ç—Ä',
                'last_name': '–ê–≤—Ç–æ—Ä'
            }
        ]

        created_users = 0
        for user_data in demo_users:
            username = user_data['username']
            
            if not User.objects.filter(username=username).exists():
                user = User.objects.create_user(
                    username=username,
                    email=user_data['email'],
                    password=user_data['password'],
                    first_name=user_data['first_name'],
                    last_name=user_data['last_name'],
                    is_staff=user_data['is_staff']
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—ã
                for group_name in user_data['groups']:
                    try:
                        group = Group.objects.get(name=group_name)
                        user.groups.add(group)
                    except Group.DoesNotExist:
                        self.stdout.write(self.style.WARNING(f'  ‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {group_name}'))
                
                self.stdout.write(self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} ({user_data["first_name"]} {user_data["last_name"]})'))
                created_users += 1
            else:
                self.stdout.write(self.style.WARNING(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "{username}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'))

        self.stdout.write(self.style.SUCCESS(''))
        self.stdout.write(self.style.SUCCESS('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))
        self.stdout.write(self.style.SUCCESS(f'üë• –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {created_users}'))
        self.stdout.write(self.style.SUCCESS(''))
        self.stdout.write(self.style.SUCCESS('üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:'))
        self.stdout.write(self.style.SUCCESS(''))
        
        if User.objects.filter(username='admins').exists():
            self.stdout.write(self.style.SUCCESS('   üî• –°—É–ø–µ—Ä–∞–¥–º–∏–Ω: admins / [–≤–∞—à –ø–∞—Ä–æ–ª—å]'))
        
        for user_data in demo_users:
            if User.objects.filter(username=user_data['username']).exists():
                roles = ', '.join(user_data['groups'])
                self.stdout.write(self.style.SUCCESS(f'   üë§ {user_data["username"]} / demo123 ({roles})'))
        
        self.stdout.write(self.style.SUCCESS(''))
        self.stdout.write(self.style.SUCCESS('üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://127.0.0.1:8000/admin/'))
        self.stdout.write(self.style.SUCCESS(''))
        self.stdout.write(self.style.SUCCESS('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–º–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –±–ª–æ–≥–∞'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –≥—Ä—É–ø–ø–∞–º–∏'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ —Å–∞–π—Ç–∞'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'))
        self.stdout.write(self.style.SUCCESS('   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏ –∞—Ä—Ö–∏–≤–∞'))