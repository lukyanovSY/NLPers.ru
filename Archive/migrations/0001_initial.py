# Generated by Django 5.1.2 on 2025-08-03 10:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Blog', '0006_tag_post_tag_objects'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('color', models.CharField(default='#007bff', help_text='HEX цвет для отображения', max_length=7, verbose_name='Цвет')),
                ('icon', models.CharField(blank=True, help_text='CSS класс Font Awesome', max_length=50, verbose_name='Иконка')),
                ('image', models.ImageField(blank=True, null=True, upload_to='archive/categories/', verbose_name='Картинка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Категория файлов',
                'verbose_name_plural': 'Категории файлов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArchiveFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('file', models.FileField(upload_to='archive/files/', verbose_name='Файл')),
                ('file_type', models.CharField(choices=[('image', 'Изображение'), ('video', 'Видео'), ('audio', 'Аудио'), ('document', 'Документ'), ('archive', 'Архив'), ('other', 'Другое')], max_length=10, verbose_name='Тип файла')),
                ('tags', models.CharField(blank=True, help_text='Разделяйте теги запятыми', max_length=200, verbose_name='Теги')),
                ('downloads_count', models.PositiveIntegerField(default=0, verbose_name='Количество скачиваний')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Количество лайков')),
                ('is_public', models.BooleanField(default=True, verbose_name='Публичный')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Разрешить комментарии')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('tag_objects', models.ManyToManyField(blank=True, related_name='archive_files', to='Blog.tag', verbose_name='Теги')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='files', to='Archive.filecategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Файл архива',
                'verbose_name_plural': 'Файлы архива',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата скачивания')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='Archive.archivefile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Скачивание',
                'verbose_name_plural': 'Скачивания',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='FileComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Количество лайков')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Одобрен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_comments', to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Archive.archivefile')),
            ],
            options={
                'verbose_name': 'Комментарий к файлу',
                'verbose_name_plural': 'Комментарии к файлам',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_public', models.BooleanField(default=True, verbose_name='Публичный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
                ('files', models.ManyToManyField(blank=True, related_name='playlists', to='Archive.archivefile')),
            ],
            options={
                'verbose_name': 'Плейлист',
                'verbose_name_plural': 'Плейлисты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='Archive.archivefile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Лайк файла',
                'verbose_name_plural': 'Лайки файлов',
                'unique_together': {('user', 'file')},
            },
        ),
    ]
